{"version":3,"sources":["categories.js","Day/Day.js","Month/Month.js","Calendar/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["categories","","Holiday","Birthday","Busy","Anniversary","CategoryModal","props","react_default","a","createElement","reactstrap_es","isOpen","toggle","Object","keys","map","category","key","check","type","name","value","onChange","checked","currentCategory","color","onClick","EmptyDay","className","NormalDay","_Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modalOpen","bind","assertThisInitialized","changeCategory","inherits","createClass","event","setState","target","date","Day_CategoryModal","Component","Day","Day_NormalDay","Day_EmptyDay","Month","monthFormatted","format","Date","year","month","weeks","firstOfMonth","toConsumableArray","Array","getWeeksInMonth","e","index","endDate","getDaysInMonth","week","getDay","buildWeeksArray","size","colSpan","src_Day_Day","Calendar","src_Month_Month","App","handleChangeYear","handleJumpToCurrentYear","getFullYear","parseInt","src_Calendar_Calendar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b06a4045.chunk.js","sourcesContent":["const categories = {\n  '' : '',\n  'Holiday' : 'bg-primary text-white',\n  'Birthday' : 'bg-success text-white',\n  'Busy' : 'bg-dark text-white',\n  'Anniversary' : 'bg-info text-white'\n};\n\nexport default categories;","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport categories from '../categories';\n\n\nexport const CategoryModal = (props) => {\n  return <Modal isOpen={props.isOpen} toggle={props.toggle}>\n    <ModalHeader toggle={props.toggle}>This date is a...</ModalHeader>\n    <ModalBody>\n      <Form>\n      { Object.keys(categories).map(category => (\n        <FormGroup key={category} check>\n          <Label check>\n            <Input type=\"radio\" name=\"radio-category\" value={category} onChange={props.onChange} checked={props.currentCategory === category} />\n            { category !== '' ? category : 'None' }\n          </Label>\n        </FormGroup>\n      ))}\n      </Form>\n    </ModalBody>\n    <ModalFooter>\n      <Button color=\"primary\" onClick={props.toggle}>Done</Button>\n    </ModalFooter>\n  </Modal>\n}\n\nexport const EmptyDay = (props) => {\n  return <td className=\"bg-light\"></td>\n}\n\nexport class NormalDay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      category: this.props.category || ''\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.changeCategory = this.changeCategory.bind(this);\n  }\n\n  toggle(event) {\n    this.setState({\n      modalOpen: !this.state.modalOpen\n    });\n  }\n\n  changeCategory(event) {\n    this.setState({\n      category: event.target.value\n    });\n  }\n\n  render() {\n    return <td className={categories[this.state.category]}>\n      <a onClick={this.toggle} >{this.props.date}</a>\n      <CategoryModal toggle={this.toggle} onChange={this.changeCategory} isOpen={this.state.modalOpen} currentCategory={this.state.category} />\n    </td>\n  }\n}\n\nclass Day extends Component {\n  render() {\n    if (this.props.date) {\n      return <NormalDay {...this.props} />\n    } else {\n      return <EmptyDay {...this.props} />\n    }\n  }\n}\n\nexport default Day;\n","import React, { Component } from 'react';\nimport { Table } from 'reactstrap';\nimport { format, getWeeksInMonth, getDaysInMonth, getDay } from 'date-fns';\nimport './Month.css';\nimport Day from '../Day/Day';\n\nconst buildWeeksArray = (year, month) => {\n  let firstOfMonth = new Date(year, month, 1);\n  let weeks = [...Array(getWeeksInMonth(firstOfMonth))].map((e, index) => [...Array(7)]);\n  let endDate = getDaysInMonth(firstOfMonth);\n  let week = 0;\n  for (let date = 1; date <= endDate; date++) {\n    let index = getDay(new Date(year, month, date));\n    weeks[week][index] = date;\n    if (index === 6) {\n      week++;\n    }\n  }\n\n  return weeks;\n}\n\nclass Month extends Component {\n\n  render() {\n    let monthFormatted = format(new Date(this.props.year, this.props.month, 1), 'LLLL');\n    let weeks = buildWeeksArray(this.props.year, this.props.month);\n\n    return (\n      <div className=\"Month\">\n        <Table size=\"sm\">\n          <thead>\n            <tr>\n              <th colSpan=\"7\">\n                {monthFormatted}\n              </th>\n            </tr>\n            <tr className=\"bg-light\">\n              <th>Su</th>\n              <th>Mo</th>\n              <th>Tu</th>\n              <th>We</th>\n              <th>Th</th>\n              <th>Fr</th>\n              <th>Sa</th>\n            </tr>\n          </thead>\n          <tbody>\n            { weeks.map((week, index) => (\n              <tr key={index}>\n                { week.map((date, index) => <Day key={index} date={date} />)}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default Month;\n","import React, { Component } from 'react';\nimport './Calendar.css';\nimport Month from '../Month/Month';\n\nclass Calendar extends Component {\n  render() {\n    return (\n      <div className=\"Calendar\">\n        <h3 className=\"text-center\">{this.props.year}</h3>\n        <div className=\"row\">\n        {\n          [...Array(12)].map((e, index) => <div className=\"col-4\" key={index}><Month year={this.props.year} month={index}></Month></div>)\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Table } from 'reactstrap';\nimport './App.css';\nimport Calendar from './Calendar/Calendar';\nimport Day from './Day/Day';\nimport categories from './categories';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { year: 2018 };\n\n    this.handleChangeYear = this.handleChangeYear.bind(this);\n    this.handleJumpToCurrentYear = this.handleJumpToCurrentYear.bind(this);\n  }\n\n  handleJumpToCurrentYear(event) {\n    this.setState({year: (new Date()).getFullYear()});\n  }\n\n  handleChangeYear(event) {\n    this.setState({year: parseInt(event.target.value, 10)});\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <header className=\"App-header\">\n          <h2>\n            Calendar demo app\n          </h2>\n        </header>\n        <main>\n          <Calendar year={this.state.year}></Calendar>\n\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <Button onClick={this.handleJumpToCurrentYear}>Jump to current year</Button>\n              <Form>\n                <FormGroup>\n                  <Label>Change year: <Input type=\"number\" value={this.state.year} onChange={this.handleChangeYear} /></Label>\n                </FormGroup>\n              </Form>\n            </div>\n            <div className=\"col-4\"></div>\n            <div className=\"col-4\">\n              <Table size=\"sm\">\n                <thead>\n                  <tr>\n                    <th colSpan=\"7\">\n                      Key\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { Object.keys(categories).map((category) => <tr key={category}><Day date={category} category={category} /></tr>) }\n                </tbody>\n              </Table>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n\t// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}